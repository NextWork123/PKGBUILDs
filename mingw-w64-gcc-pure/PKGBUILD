# Maintainer: Vasiliy Stelmachenok <ventureo@yandex.ru>
## Maintainers of original Arch Linux package:
# Maintainer: Felix Yan <felixonmars@archlinux.org>

pkgname=mingw-w64-gcc-pure
pkgver=14.2.0
pkgrel=1
pkgdesc="Cross GCC for the MinGW-w64 cross-compiler"
arch=('x86_64')
url="https://gcc.gnu.org"
license=(GPL-3.0-with-GCC-exception GFDL-1.3-or-later)
groups=('mingw-w64-toolchain' 'mingw-w64')
depends=(
  bash
  gcc-libs
  glibc
  gmp
  libisl
  libmpc
  mingw-w64-binutils
  mingw-w64-crt
  mingw-w64-headers
  mingw-w64-winpthreads
  mpfr
  python
  zlib
  zstd
)
provides=('mingw-w64-gcc')
conflicts=('mingw-w64-gcc')
options=('staticlibs' '!emptydirs' '!buildflags')
source=("https://ftp.gnu.org/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz"
        '0200-add-m-no-align-vector-insn-option-for-i386.patch')
sha512sums=(
    '932bdef0cda94bacedf452ab17f103c0cb511ff2cec55e9112fc0328cbf1d803b42595728ea7b200e0a057c03e85626f937012e49a7515bc5dd256b2bf4bc396'
    '6008e7589d8520d9b4627d72134b2a1f8a1f1fd43e858c6bab9091bc9d1b741b809f0b26d5c25d44601eac1a982c9a152ea1be22d1f9bc6a9f212e53c506e72b'
)

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

prepare() {
  ln -sf gcc-${pkgver/+/-} gcc

  cd gcc

  # Adds performance boost for DXVK/Wine (maybe)
  patch -Np1 -i "${srcdir}/0200-add-m-no-align-vector-insn-option-for-i386.patch"

  # mmapio.c:69:14: error: implicit declaration of function ‘getpagesize’
  sed -i 's|\-Werror||g' libbacktrace/configure
}

build() {
  for _arch in ${_architectures}; do
    mkdir -p "$srcdir/build-${_arch}" && cd "$srcdir/build-${_arch}"
    "$srcdir"/gcc/configure --prefix=/usr --libexecdir=/usr/lib \
        --target="${_arch}" \
        --enable-languages=c,c++,lto,objc,obj-c++ \
        --enable-shared --enable-static \
        --enable-threads=posix --enable-fully-dynamic-string \
        --enable-libstdcxx-time=yes --enable-libstdcxx-filesystem-ts=yes \
        --with-system-zlib --enable-cloog-backend=isl \
        --enable-lto --enable-libgomp \
        --disable-multilib --enable-checking=release \
        --disable-sjlj-exceptions --with-dwarf2
    make
  done
}

package() {
  for _arch in ${_architectures}; do
    cd "$srcdir/build-${_arch}"
    make DESTDIR="$pkgdir" install

    "${_arch}"-strip "$pkgdir/usr/${_arch}/lib"/*.dll
    strip "$pkgdir"/usr/bin/"${_arch}"-*
    strip "$pkgdir/usr/lib/gcc/${_arch}/${pkgver}"/{cc1*,collect2,lto*}
    ln -s ${_arch}-gcc "$pkgdir"/usr/bin/${_arch}-cc

    # mv dlls
    mkdir -p "$pkgdir"/usr/"${_arch}"/bin/
    mv "$pkgdir/usr/${_arch}/lib"/*.dll "$pkgdir/usr/${_arch}/bin/"
  done

  strip "$pkgdir"/usr/bin/*

  # remove unnecessary files
  rm -r "$pkgdir"/usr/share
  rm "$pkgdir"/usr/lib/libcc1.*
}
